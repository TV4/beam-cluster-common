defmodule Structs.User do
  @moduledoc """
  User data in flat format, can be used to pass user data between user database and account service
  """

  defstruct [
    :id,
    :uid,
    :email,
    :username,
    :first_name,
    :last_name,
    :password,
    :portability,
    :generic_ads,
    :no_ads,
    :pin_code,
    :year_of_birth,
    :zip_code,
    :accepted_play_terms,
    :accepted_fotbollskanalen_terms,
    :accepted_mtv_terms,
    :accepted_mtv_uutiset_terms,
    :accepted_play_terms_date,
    :accepted_fotbollskanalen_terms_date,
    :accepted_mtv_terms_date,
    :accepted_mtv_uutiset_terms_date,
    :country_code,
    :postal_address,
    :mobile_number,
    :gender,
    :email_verified,
    :mobile_number_verified,
    :digital_customership_communications,
    :online_account_data_marketing,
    :research,
    :marketing,
    :global_user,
    :inserted_at
  ]

  @type parsed_user_data :: %{
          id: integer(),
          uid: String.t(),
          email: String.t(),
          username: String.t(),
          first_name: String.t(),
          last_name: String.t(),
          password: String.t(),
          portability: boolean(),
          generic_ads: boolean(),
          no_ads: boolean(),
          pin_code: String.t(),
          year_of_birth: String.t(),
          zip_code: String.t(),
          accepted_play_terms: String.t(),
          accepted_fotbollskanalen_terms: String.t(),
          accepted_mtv_terms: String.t(),
          accepted_mtv_uutiset_terms: String.t(),
          accepted_play_terms_date: String.t(),
          accepted_fotbollskanalen_terms_date: String.t(),
          accepted_mtv_terms_date: String.t(),
          accepted_mtv_uutiset_terms_date: String.t(),
          country_code: String.t(),
          postal_address: String.t(),
          mobile_number: String.t(),
          gender: String.t(),
          email_verified: String.t(),
          mobile_number_verified: boolean(),
          digital_customership_communications: boolean(),
          online_account_data_marketing: boolean(),
          research: boolean(),
          marketing: boolean(),
          global_user: boolean(),
          inserted_at: NaiveDatime.t()
        }

  @type parsed_input_user_data :: %{
          optional(:email) => String.t(),
          optional(:username) => String.t(),
          optional(:first_name) => String.t(),
          optional(:last_name) => String.t(),
          optional(:password) => String.t(),
          optional(:portability) => boolean(),
          optional(:generic_ads) => boolean(),
          optional(:no_ads) => boolean(),
          optional(:pin_code) => String.t(),
          optional(:year_of_birth) => String.t(),
          optional(:zip_code) => String.t(),
          optional(:accepted_play_terms) => String.t(),
          optional(:accepted_fotbollskanalen_terms) => String.t(),
          optional(:accepted_mtv_terms) => String.t(),
          optional(:accepted_mtv_uutiset_terms) => String.t(),
          optional(:accepted_play_terms_date) => String.t(),
          optional(:accepted_fotbollskanalen_terms_date) => String.t(),
          optional(:accepted_mtv_terms_date) => String.t(),
          optional(:accepted_mtv_uutiset_terms_date) => String.t(),
          optional(:country_code) => String.t(),
          optional(:postal_address) => String.t(),
          optional(:mobile_number) => String.t(),
          optional(:gender) => String.t(),
          optional(:email_verified) => String.t(),
          optional(:mobile_number_verified) => boolean(),
          optional(:digital_customership_communications) => boolean(),
          optional(:online_account_data_marketing) => boolean(),
          optional(:research) => boolean(),
          optional(:marketing) => boolean(),
          optional(:global_user) => boolean(),
          optional(:inserted_at) => NaiveDatime.t()
        }
end
